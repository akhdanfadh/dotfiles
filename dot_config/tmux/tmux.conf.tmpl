# ------ GENERAL

# set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc" 
set -sg escape-time 0  # escape key timeout, see https://github.com/LunarVim/LunarVim/issues/1857

set -g mouse on
set -g set-clipboard on

set -g base-index 1  # base index numbering from 1, instead of 0
setw -g pane-base-index 1
set -g pane-border-lines heavy

set -g renumber-windows on  # renumber windows when closing one
setw -g automatic-rename off  # rename window to reflect current program

set -g monitor-activity on  # monitor window activity
set -g visual-activity off  # activity bell and whistles

# ------ KEYBINDINGS

unbind-key -a  # unbind every prefix key, USE WITH CAUTION

set -g prefix C-Space
bind C-Space send-prefix  # press C-a twice to send on nested tmux sessions

bind : command-prompt
bind ? list-keys
bind d detach-client
bind t choose-tree -Zw

bind p display-panes
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind M break-pane
bind q confirm kill-pane

bind -r m resize-pane -Z
bind -r j resize-pane -D 2
bind -r k resize-pane -U 2
bind -r l resize-pane -R 2
bind -r h resize-pane -L 2
bind -r < swap-pane -U
bind -r > swap-pane -D

bind -r C-j previous-window
bind -r -T root M-C-j previous-window
bind -r C-k next-window
bind -r -T root M-C-k next-window
bind -r C-/ last-window
bind c new-window -c "#{pane_current_path}"
# this code below makes restoring tmux with resurrect buggy:
# need to press enter multiple times while the statusbar only showing "Restoring..."
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"
bind r command-prompt -I'#W' { rename-window -- '%%' }
bind Q confirm kill-window

bind C command-prompt -p "Session name:" "new-session -s '%1'"
bind R command-prompt -I'#S' { rename-session -- '%%' }

# ------ COPY MODE, SCROLL

set -g mode-keys vi
bind Space copy-mode
bind -T copy-mode-vi Escape send -X cancel

unbind -T root MouseDrag1Pane  # disable drag entirely (else you copy it)

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel

bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi J send -X halfpage-down
bind -T copy-mode-vi K send -X halfpage-up
bind -T copy-mode-vi L send -X end-of-line

# ------ PLUGINS

set-environment -g TMUX_PLUGIN_MANAGER_PATH '{{ .tmux_data_dir }}/plugins'

# tpm set `bind I install-plugins`
set -g @plugin "tmux-plugins/tpm"  # our plugin manager
set -g @plugin "tmux-plugins/tmux-sensible"  # tmux settings everyone agreed

set -g @plugin "christoomey/vim-tmux-navigator"  # better navigation with nvim
set -g @vim_navigator_mapping_left "M-h"
set -g @vim_navigator_mapping_right "M-l"
set -g @vim_navigator_mapping_up "M-k"
set -g @vim_navigator_mapping_down "M-j"
set -g @vim_navigator_mapping_prev "M-/"

# resurrect use prefix + C-s/C-r to save/restore
set -g @plugin 'tmux-plugins/tmux-resurrect'  # persist tmux env across system restarts
set -g @resurrect-dir "{{ .tmux_data_dir }}/resurrect-files"  # save resurrect data here
set -g @resurrect-capture-pane-contents 'on'  # save pane contents
set -g @resurrect-strategy-nvim 'session'  # save nvim session

set -g @plugin 'tmux-plugins/tmux-continuum'  # automatically saves session every 15m
# set -g @continuum-restore 'on'  # restore saved tmux env on tmux start

set -g @plugin 'niksingh710/minimal-tmux-status'
set -g @minimal-tmux-status "top"
set -g @minimal-tmux-fg "#262626"
set -g @minimal-tmux-bg "#98c379"
set -g @minimal-tmux-indicator-str "C󱁐"

# Continuum rely on status-right hook or so, so anything modifying that will make autosave not working
# https://github.com/tmux-plugins/tmux-continuum/issues/48
# maybe relevant in the future: https://github.com/tmux-plugins/tmux-continuum/issues/24
set -g @minimal-tmux-status-right-extra "#({{ .tmux_data_dir }}/plugins/tmux-continuum/scripts/continuum_save.sh) #{continuum_status}"
# set -g @continuum-save-interval '1'

# ------ REMOTE TMUX SESSIONS (Nesting)

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12 \
    set prefix None \;\
    set key-table off \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S

bind -T off F12 \
    set -u prefix \;\
    set -u key-table \;\
    refresh-client -S

if-shell 'test -n "$SSH_CLIENT"' \
    'set -g @minimal-tmux-status-left-extra "-ssh"'

# ---------------

if-shell "test ! -d {{ .tmux_data_dir }}/plugins/tpm" \
    "run-shell 'git clone https://github.com/tmux-plugins/tpm {{ .tmux_data_dir }}/plugins/tpm && {{ .tmux_data_dir }}/plugins/tpm/bin/install_plugins'"
run-shell "{{ .tmux_data_dir }}/plugins/tpm/bin/update_plugins all"
run-shell "{{ .tmux_data_dir }}/plugins/tpm/tpm"

# vim: syntax=tmux
