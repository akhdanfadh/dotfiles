# Auto load tmux
if [ -z "$TMUX" ]
then
    tmux attach -t default || tmux new -s default
fi
# tmux reminder
# if [ -z "$TMUX" ]; then
#     echo "Are you tmuxing?"
# fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
ZSH_THEME="powerlevel10k"

# User local bin (for chezmoi, etc.)
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# oh-my-zsh configuration
export ZSH="$HOME/.oh-my-zsh"
zstyle ':omz:update' mode auto

plugins=(
    zsh-autocomplete
    conda-zsh-completion
    zsh-autosuggestions
    fast-syntax-highlighting
    zsh-vi-mode
    chezmoi
    debian
    copypath
    git
    npm
    pip
    ssh
    aliases
)

# plugin configuration
function zvm_config() {
    ZVM_INIT_MODE=sourcing
    ZVM_VI_INSERT_ESCAPE_BINDKEY='jj'
    ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT 
    # mode: classic = nvim-surround, s-prefix = mini.surround
    ZVM_VI_SURROUND_BINDKEY='classic'
}

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
source $ZSH/oh-my-zsh.sh
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

# >>> KEYBINDINGS >>>
# Reset history key bindings to Zsh default and vim normal mode
() {
local -a prefix=( '\e'{\[,O} )
local -a up=( ${^prefix}A ) down=( ${^prefix}B )
local key=
for key in $up[@]; do
    bindkey "$key" up-line-or-history
done
for key in $down[@]; do
    bindkey "$key" down-line-or-history
done

bindkey -M vicmd 'j' down-line-or-history
bindkey -M vicmd 'k' up-line-or-history
# bindkey -M viins "^j" down-line-or-history
# bindkey -M viins "^k" up-line-or-history
}
# Extra vim custom mapping
bindkey -M vicmd 'H' beginning-of-line
bindkey -M vicmd 'L' end-of-line
# Cycle completions 
bindkey "^n" menu-complete  # careful here, ctrl-i is also tab
bindkey "^p" reverse-menu-complete
# bindkey '^I' menu-complete
# bindkey "$terminfo[kcbt]" reverse-menu-complete
# zsh-autosuggestions related
bindkey "^y" autosuggest-accept
# <<< KEYBINDINGS <<<

# Faster pasting multiline commands, especially with autosuggest and highlighting
# https://github.com/zsh-users/zsh-autosuggestions/issues/238
pasteinit() {
    OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
    zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}
pastefinish() {
    zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish

# Language environment
export LANG=en_US.UTF-8
export LC_TIME=en_GB.UTF-8
export LC_PAPER=en_GB.UTF-8
export LC_MEASUREMENT=en_GB.UTF-8

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/dani/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/dani/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/dani/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/dani/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Neovim path
export PATH="/opt/nvim-linux64/bin:$PATH"
export EDITOR="nvim"
alias v="nvim"

# Wezterm WSL Config
export MICROSOFT_UNAME=$(uname -a | grep -i microsoft)
export IS_WSL=$( [ ! -z "$MICROSOFT_UNAME" ] && echo "1" || echo "0" )
if [[ "$IS_WSL" == "1" ]]; then
    alias wezedit="nvim ~/.config/wezterm/wezterm.lua"
    alias wezpush="cp ~/.config/wezterm/wezterm.lua /mnt/c/Users/akhdan/.config/wezterm/wezterm.lua "
    alias wezeditwin="vim /mnt/c/Users/akhdan/.config/wezterm/wezterm.lua"
    alias wezpull="cp /mnt/c/Users/akhdan/.config/wezterm/wezterm.lua ~/.config/wezterm/wezterm.lua"
fi

# WSL Browser config - make sure `wslu` is installed
if [[ "$IS_WSL" == "1" ]]; then
    export BROWSER=wslview
fi

# tmux aliases
alias tm="tmux new -A -s"  # start new or attach to named session
alias tml="tmux ls"  # new named session
alias tmk="tmux kill-session -t"  # terminate named running tmux session
alias tms="tmux source ~/.config/tmux/tmux.conf"  # terminate named running tmux session
alias tmka="tmux kill-server"  # terminall all tmux sessions

# To customize prompt, run `p10k configure` or edit ~/.config/p10k.zsh or ~/.p10k.zsh.
[[ -f ~/.config/p10k.zsh ]] && source ~/.config/p10k.zsh || source ~/.p10k.zsh
