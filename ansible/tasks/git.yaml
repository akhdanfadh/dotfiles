---
- name: Git Basic Configuration
  block:
    - name: Ensure git and git-delta is installed
      ansible.builtin.package:
        name:
          - git
          - git-delta
        state: present
      become: true

    - name: Configure git user email
      community.general.git_config:
        name: user.email
        scope: global
        value: "{{ config.git_email }}"

    - name: Configure git user name
      community.general.git_config:
        name: user.name
        scope: global
        value: "{{ config.git_name }}"

    - name: Configure git to use delta as diff tool
      community.general.git_config:
        name: core.pager
        scope: global
        value: "delta"

    - name: Configure delta settings
      community.general.git_config:
        name: "{{ item.key }}"
        scope: global
        value: "{{ item.value }}"
      loop:
        - { key: "interactive.diffFilter", value: "delta --color-only" }
        - { key: "delta.navigate", value: "true" }
        - { key: "delta.light", value: "false" }
        - { key: "merge.conflictstyle", value: "diff3" }
        - { key: "diff.colorMoved", value: "default" }

- name: GitHub CLI and Authentication (non-minimal mode only)
  when: not config.minimal | bool
  block:
    - name: Ensure GitHub CLI is installed
      ansible.builtin.package:
        name: gh
        state: present
      become: true

    - name: Check GitHub authentication status
      ansible.builtin.command: gh auth status
      register: gh_auth_check
      failed_when: false
      changed_when: false

    - name: Setup GitHub SSH authentication if not authenticated
      when: gh_auth_check.rc != 0
      block:
        - name: Ensure .ssh directory exists
          ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/.ssh"
            state: directory
            mode: '0700'

        - name: Check if GitHub SSH key already exists
          ansible.builtin.stat:
            path: "{{ ansible_env.HOME }}/.ssh/github_ed25519"
          register: github_ssh_key

        - name: Generate GitHub SSH key if it doesn't exist
          community.crypto.openssh_keypair:
            path: "{{ ansible_env.HOME }}/.ssh/github_ed25519"
            type: ed25519
            comment: "{{ ansible_user_id }}@{{ ansible_hostname }}__git@github.com"
          when: not github_ssh_key.stat.exists

        - name: Add GitHub SSH configuration
          ansible.builtin.blockinfile:
            path: "{{ ansible_env.HOME }}/.ssh/config"
            marker: "# {mark} ANSIBLE MANAGED BLOCK - GitHub"
            create: true
            backup: true
            mode: '0600'
            block: |
              Host github.com
                  AddKeysToAgent yes
                  IdentityFile {{ ansible_env.HOME }}/.ssh/github_ed25519

        - name: Trigger GitHub authentication instructions
          ansible.builtin.command: /bin/true
          notify: GitHub authentication required
          changed_when: true
